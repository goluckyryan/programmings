#include <iomanip>   

#include "globals.hh"
#include "G4ios.hh"
#include "G4ProcessManager.hh"
#include "G4ProcessVector.hh"
#include "G4ParticleTypes.hh"
#include "G4ParticleTable.hh"

#include "G4Material.hh"
#include "G4MaterialTable.hh"

#include "G4DecayPhysics.hh"
#include "G4EmStandardPhysics.hh"
#include "G4EmExtraPhysics.hh"
#include "G4IonPhysics.hh"
#include "G4StoppingPhysics.hh"
#include "G4HadronElasticPhysics.hh"
#include "G4NeutronTrackingCut.hh"

#include "G4DataQuestionaire.hh"
#include "HadronPhysicsQGSP.hh"

#include "G4WarnPLStatus.hh"

template<class T> TQGSP<T>::TQGSP(G4int ver):  T()
{
  // default cut value  (1.0mm) 
  // defaultCutValue = 1.0*CLHEP::mm;

  G4DataQuestionaire it(photon);
  G4cout << "<<< Geant4 Physics List simulation engine: QGSP 4.0"<<G4endl;
  G4cout <<G4endl;

  this->defaultCutValue = 0.7*CLHEP::mm;  
  this->SetVerboseLevel(ver);

  G4WarnPLStatus obs;
  obs.Replaced("QGSP", "QGSP_BERT");
  
  // EM Physics
  this->RegisterPhysics( new G4EmStandardPhysics(ver) );

  // Synchroton Radiation & GN Physics
  this->RegisterPhysics( new G4EmExtraPhysics(ver) );

  // Decays
  this->RegisterPhysics( new G4DecayPhysics(ver) );

   // Hadron Elastic scattering
  this->RegisterPhysics( new G4HadronElasticPhysics(ver) );

   // Hadron Physics
  this->RegisterPhysics( new HadronPhysicsQGSP(ver));

  // Stopping Physics
  this->RegisterPhysics( new G4StoppingPhysics(ver) );

  // Ion Physics
  this->RegisterPhysics( new G4IonPhysics(ver));
  
  // Neutron tracking cut
  this->RegisterPhysics( new G4NeutronTrackingCut(ver));

}

template<class T> TQGSP<T>::~TQGSP()
{
}

template<class T> void TQGSP<T>::SetCuts()
{
  if (this->verboseLevel >1){
    G4cout << "QGSP::SetCuts:";
  }  
  //  " G4VUserPhysicsList::SetCutsWithDefault" method sets 
  //   the default cut value for all particle types 

  this->SetCutsWithDefault();   
   
//  if (this->verboseLevel > 0)
//    G4VUserPhysicsList::DumpCutValuesTable();  
}



// 2002 by J.P. Wellisch
